---

# - name: Display VM info
#   debug:
#     msg: "{{ host }}"
#   # with_items: "{{ hostvars[item].vm_disks }}"

- name: Display VM info
  debug:
    msg: "Resource Group: {{ hostvars[item].resourceGroupName }}, VM Host: {{ item }}, OS: {{ hostvars[item].type }}, Disks: {{ hostvars[item].vm_disks }}"
  when: hostvars[item].vm_disks | length>0


- name: Display VM Disks
  debug:
    var: hostvars[item].vm_disks
  when: hostvars[item].vm_disks | length>0


- name: Loop over vm_disks and create each disk
  debug:
    msg: "Creating disk {{ disk_to_create.value.name }} with size {{ disk_to_create.value.diskSizeGB }}GB and SKU {{ disk_to_create.value.diskType }} in {{ location }} for VM {{ item }}"
  loop: "{{ hostvars[item].vm_disks | dict2items if hostvars[item].vm_disks is mapping else [] }}"
  loop_control:
    label: "{{ disk_to_create.key }}"
    loop_var: disk_to_create

- name: Create managed disks
  azure_rm_manageddisk:
    resource_group: "{{ hostvars[item].resourceGroupName }}"
    location: "{{ location }}"
    name: "{{ item }}-{{ disk_to_create.value.name }}"
    disk_size_gb: "{{ disk_to_create.value.diskSizeGB }}"
    storage_account_type: "{{ disk_to_create.value.diskType }}"
    # We dont have permission for this...
    # managed_by: "{{ item }}"
  loop: "{{ hostvars[item].vm_disks | dict2items if hostvars[item].vm_disks is mapping else [] }}"
  loop_control:
    label: "{{ disk_to_create.key }}"
    loop_var: disk_to_create 

- name: Attach managed disks to VM
  ansible.builtin.shell: |
    az vm disk attach \
      --resource-group {{ hostvars[item].resourceGroupName }} \
      --vm-name {{ item }} \
      --name {{ item }}-{{ disk_to_create.value.name }} \
      --lun {{ lun_num }}
  loop: "{{ hostvars[item].vm_disks | dict2items if hostvars[item].vm_disks is mapping else [] }}"
  loop_control:
    label: "{{ disk_to_create.key }}"
    loop_var: disk_to_create
    index_var: lun_num
  register: attach_disk_result
  environment:
    AZURE_SUBSCRIPTION_ID: "{{ subscription_id }}"
    AZURE_LOCATION: "{{ location }}"
  ignore_errors: yes
